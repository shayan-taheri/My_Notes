{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fmodern\fcharset0 Courier-Bold;
}
{\colortbl;\red255\green255\blue255;\red0\green45\blue153;\red58\green0\blue98;\red0\green0\blue169;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720

\f0\b\fs36 \cf0 assert
\b0\fs28 \
\

\f1 \cf2 void assert (int expression);
\f0 \cf0 \
\

\f2\b \cf2 expression
\f0\b0 \cf0  should be evaluated. If this expression \ul evaluates to 0\ulnone , this causes an assertion failure that terminates the program. It means that a message is written to the standard error device and {\field{\*\fldinst{HYPERLINK "http://www.cplusplus.com/abort"}}{\fldrslt abort}} is called, terminating the program execution.\
\

\b\fs36 Virtual members
\b0\fs28 \
\
A member of a class that can be redefined in its derived classes is known as a virtual member. In order to declare a member of a class as virtual, we must precede its declaration with the keyword 
\f2\b \cf2 virtual
\f0\b0 \cf0 .\
\

\b Example:\
\
\pard\pardeftab720

\f1\b0\fs24 \cf3 #include <iostream>\cf0 \
\pard\pardeftab720
\cf4 using\cf0  \cf4 namespace\cf0  std;\
\
\cf4 class\cf0  CPolygon \{\
  \cf4 protected\cf0 :\
    \cf4 int\cf0  width, height;\
  \cf4 public\cf0 :\
    \cf4 void\cf0  set_values (\cf4 int\cf0  a, \cf4 int\cf0  b)\
      \{ width=a; height=b; \}\
    \cf4 virtual\cf0  \cf4 int\cf0  area ()\
      \{ \cf4 return\cf0  (0); \}\
  \};\
\
\cf4 class\cf0  CRectangle: \cf4 public\cf0  CPolygon \{\
  \cf4 public\cf0 :\
    \cf4 int\cf0  area ()\
      \{ \cf4 return\cf0  (width * height); \}\
  \};\
\
\cf4 class\cf0  CTriangle: \cf4 public\cf0  CPolygon \{\
  \cf4 public\cf0 :\
    \cf4 int\cf0  area ()\
      \{ \cf4 return\cf0  (width * height / 2); \}\
  \};\
\
\cf4 int\cf0  main () \{\
  CRectangle rect;\
  CTriangle trgl;\
  CPolygon poly;\
  CPolygon * ppoly1 = &rect;\
  CPolygon * ppoly2 = &trgl;\
  CPolygon * ppoly3 = &poly;\
  ppoly1->set_values (4,5);\
  ppoly2->set_values (4,5);\
  ppoly3->set_values (4,5);\
  cout << ppoly1->area() << endl;\
  cout << ppoly2->area() << endl;\
  cout << ppoly3->area() << endl;\
  \cf4 return\cf0  0;\
\}}