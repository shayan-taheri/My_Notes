{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier-Bold;}
{\colortbl;\red255\green255\blue255;\red74\green0\blue230;\red59\green0\blue164;\red255\green39\blue18;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs36 \cf0 I/O Stream and I/O Stream Iterator
\b0\fs28 \
\

\f1\b\fs32 istream
\f0\b0\fs28 \
\
\pard\pardeftab720
\cf0 Input stream objects can read and interpret input from sequences of characters. \
\
The standard object 
\f1\b\fs32 \cf2 cin
\f0\b0\fs28 \cf0  is an object of this type.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f1\b\fs32 \cf0 ostream
\f0\b0\fs28 \
\pard\pardeftab720
\cf0 \
Output stream objects can write sequences of characters and represent other kinds of data.\
\
The standard objects 
\f1\b\fs32 \cf2 cout
\f0\b0\fs28 \cf0 , 
\f1\b\fs32 \cf2 cerr
\f0\b0\fs28 \cf0  and 
\f1\b\fs32 \cf2 clog
\f0\b0\fs28 \cf0  are objects of this type.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f1\b\fs32 \cf0 istream_iterator\
\

\fs28 \cf3 istream_iterator <Type> (istream_object)
\f0\b0 \cf0 \
\pard\pardeftab720
\cf0 \
Istream iterators are \ul input iterators\ulnone  that read successive elements from an input stream (such as 
\f1\b\fs32 \cf2 cin
\f0\b0\fs28 \cf0 ).\
\
They are constructed from a \ul basic_istream\ulnone  object, to which they become associated, so that whenever 
\b operator ++
\b0  is used on the iterator, it extracts an element from the stream (using 
\b operator >>
\b0 ).\
\
This kind of iterator has a special state as an end-of-stream iterator, which is acquired if an input operations fails (as returned by fail after an operation with the associated stream), and is also the resulting value of a default-constructed object.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f1\b\fs32 \cf0 ostream_iterator\
\

\fs28 \cf3 ostream_iterator <Type> (ostream_object, "string_between_outputs")
\f0\b0 \cf0 \
\pard\pardeftab720
\cf0 \
Ostream iterators are \ul output iterators\ulnone  that write sequentially to an output stream (such as 
\f1\b\fs32 \cf2 cout
\f0\b0\fs28 \cf0 ).\
\
They are constructed from a \ul basic_ostream\ulnone  object, to which they become associated, so that whenever an assignment operator 
\b\fs32 (=)
\b0\fs28  is used on the ostream_iterator (
\b \cf4 dereferenced or not
\b0 \cf0 ), it inserts a new element into the stream.\
\
whenever 
\b operator ++
\b0  is used on the iterator, it writes an element to the stream.\
}