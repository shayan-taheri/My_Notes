{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Consolas-Bold;\f2\fnil\fcharset0 Consolas;
}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww26480\viewh15320\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs36 \cf0 \ul \ulc0 Fundaments
\b0\fs24 \ulnone \
\
\
1) 
\b Script
\b0 : In MATLAB, there is \ul script\ulnone  instead of \ul program\ulnone . Each script is an 
\b M-file
\b0 , which contains commands that are executed sequentially.\
\
2) 
\b Variable_Name = Expression
\b0 : This command is used for assigning the result of the expression to the variable.\
\
3) 
\b Case Sensitive
\b0 : MATLAB is a \ul case - sensitive\ulnone  language.\
\
4) 
\b Semicolon
\b0 : Using semicolon at the end of a command prevents display of its output.\
\
5) 
\b Two Single Quote (
\f1 ' '
\f0 )
\b0 : It is used for enclosing both \ul char\ulnone  and \ul string\ulnone .\
\
6) 
\b Variable Type
\b0 : In MATLAB, the type of a variable is determined automatically based on the value that is assigned to it.\
\
\ul Notice\ulnone : The default type for every variable is considered as "
\b Double
\b0 ".\
\
7) 
\f1\b\fs28 whos
\f0\b0\fs24 : It shows the current variables (in workspace) and their types.\
\
8) 
\b Saturation
\b0 : It happens when we want to assign a value to a variable that exceeds the permissible range of its type.\
\
9) 
\b Operators
\b0 : 
\f1\b +
\f0\b0  (Addition) , 
\f1\b -
\f0\b0  (Subtraction) , 
\f1\b *
\f0\b0  (Multiplication) , 
\f1\b /
\f0\b0  (Division) , 
\f1\b ^
\f0\b0  (Exponentiation)\
\
\ul Notice\ulnone : 
\f2\fs28 eN = e ^ N
\f0\fs24 \
\
10) 
\b Nested Parentheses
\b0 : In nested parentheses of an expression, the \ul inner\ulnone  one has the highest priority.\
\
11) 
\b Random Number Generator
\b0 : It doesn't generate random numbers in reality. In fact, it generates pseudo random numbers by getting an initial value which is called \ul Seed\ulnone .\
\
\ul Notice\ulnone : If the seed doesn't change, the sequence of random numbers is repeated again.\
\
12) 
\b Comment
\b0 : For \ul one line commenting\ulnone  and \ul multiple lines commenting\ulnone , 
\b\fs28 %
\b0\fs24  and 
\b\fs28 %\{          %\}
\b0\fs24  are used respectively.\
\
13) 
\b Relational Operators
\b0 : 
\f2\fs28 >
\f0\fs24  , 
\f2\fs28 >=
\f0\fs24  , 
\f2\fs28 <
\f0\fs24  , 
\f2\fs28 <=
\f0\fs24  , 
\f2\fs28 ==
\f0\fs24  , 
\f2\fs28 ~=
\f0\fs24 \
\
14) 
\b NOT Operator
\b0 : In MATLAB, 
\f1\b\fs32 ~
\f0\b0\fs24  (Tilde) is used as the 
\b NOT
\b0  operator. The operator 
\f1\b\fs28 !
\f0\b0\fs24  (Exclamation Mark) is not used for NOT operation in MATLAB.\
\
15) 
\b Logical Operators
\b0 : 
\f2\fs28 &&
\f0\fs24  , 
\f2\fs28 ||
\f0\fs24  , 
\f2\fs28 ~
\f0\fs24  , 
\f2\fs28 xor (arg1,arg2)
\f0\fs24  , 
\f2\fs28 all (logical container)
\f0\fs24  , 
\f2\fs28 any (logical container)
\f0\fs24 \
\
\ul Notice 1\ulnone : The operators 
\f2\fs28 &&
\f0\fs24  and 
\f2\fs28 ||
\f0\fs24  are used on logical scalars.\
\
\ul Notice 2\ulnone : The operators 
\f2\fs28 &
\f0\fs24  and 
\f2\fs28 |
\f0\fs24  are used on logical vectors or matrices. The operations are done element-wise.\
\
\ul Notice 3\ulnone : 
\f2\fs28 all (logical container)
\f0\fs24  is used for logical vectors and matrices and returns 
\b True
\b0  if \ul all of the elements\ulnone  are 
\b True
\b0 .\
\
\ul Notice 4\ulnone : 
\f2\fs28 any (logical container)
\f0\fs24  is used for logical vectors and matrices and returns 
\b True
\b0  if \ul any of the elements\ulnone  is 
\b True
\b0 . \
\
16) 
\f1\b\fs28 rng (Seed)
\f0\b0\fs24 : It is used for changing the seed of random number generator to determine the specification of random number generation (i.e. make it different or similar).\
\
17) 
\f1\b\fs28 help anything
\f0\b0\fs24 : This command is used to get information about anything.\
\
18) 
\f1\b\fs28 i
\f0\b0\fs24  and 
\f1\b\fs28 j
\f0\b0\fs24  are built-in functions that return 
\f1\b\fs28 sqrt (-1)
\f0\b0\fs24 .}