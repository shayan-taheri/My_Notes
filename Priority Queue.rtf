{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fmodern\fcharset0 Courier-Bold;
\f3\fnil\fcharset178 GeezaPro;\f4\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;\red0\green61\blue204;\red249\green255\blue248;\red255\green39\blue18;
\red0\green0\blue169;\red217\green11\blue0;\red58\green0\blue98;\red29\green96\blue0;}
\margl1440\margr1440\vieww26460\viewh14160\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs36 \cf0 Priority Queue
\fs32 \

\b0\fs28 \
\pard\pardeftab720

\f1 \cf2 \cb3 template <class T, class Container = vector <T>, class Compare = less <typename Container::value_type> > class priority_queue;
\f0 \cf0 \cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\pard\pardeftab720

\f1 \cf2 \cb3 // T = Type of the elements.\
// Container = Type of the underlying container (Example: deque, vector, \'85).\
// "Container" is "vector" by default.
\f0 \cf0 \cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
a. It is a type of container adaptor.\
b. Its first elements is always the greatest of the elements it contains.\
c. TOP of the Priority Queue = Elements \ul can be inserted at any moment\ulnone , and only 
\b the max heap element can be retrieved
\b0 .\
\
Notice: TOP of the Priority Queue = Back of the Underlying Container\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 Important
\b0 :\
\
1) \cf4 Priority Queue is a class\cf0  (= Container)\
2) Priority Queue has an \ul underlying container\ulnone \
3) The \ul underlying container\ulnone  is an encapsulated object of a \ul specific container class\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \ulnone 4) The underlying container should support the following operations:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 *
\b0  
\f1 front()
\f0 \

\b *
\b0  
\f1 push_back()
\f0 \

\b *
\b0  
\f1 pop_back()\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0 \cf0 \ul \ulc0 Example for Underlying Container\ulnone : 
\f1 vector, deque\
\

\f2\b\fs32 FORMAT: 
\fs28 priority_queue < \cf5 Type\cf0 , underlying_container <\cf5 Type\cf0 >, condition_for_MAX_value > name;\
\

\f1\b0 // underlying_container: vector, deque, \'85\
// condition_for_MAX_value: function (for comparison), \'85
\f2\b \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\qr

\f3\fs32 \cf0 \'e4\uc0\u1705 \'ca\'e5
\f4 :
\f3  
\b0 \'d5\'dd \'c7\'e6\'e1\'e6\uc0\u1740 \'ca \'cf\'c7\'d1 \u1740 \u1705  \u1705 \'e1\'c7\'d3 \'c7\'d2 \u1705 \'e1\'c7\'d3\u1740  \'cf\u1740 \'90\'d1 \'c7\'d3\'ca. \u1740 \'da\'e4\u1740  \u1740 \u1705  \'d5\'dd \'c7\'e6\'e1\'e6\u1740 \'ca \'cf\'c7\'d1 \u1705 \'e1\'c7\'d3\u1740  \'c7\'d3\'ca \u1705 \'e5 \'e3\u1740  \'ce\'e6\'c7\'e5\'cf \'c7\'d2 \u1705 \'e1\'c7\'d3 \u1740 \'c7 \u1705 \'c7\'e4\'ca\u1740 \'e4\'d1 \'cf\u1740 \'90\'d1 \'e3\'d8\'c7\'c8\'de \'c7\'da\'e3\'c7\'e1 \'e3\'e6\'d1\'cf \'e4\'d9\'d1 \'ce\'e6\'cf 
\f4 ( 
\f3 \uc0\u1740 \'da\'e4\u1740 
\b \cf6  \'c7\'e1\'e3\'c7\'e4 \'ce\'d1\'e6\'cc\uc0\u1740  \'d5\'dd \'c7\'e6\'e1\'e6\u1740 \'ca \'cf\'c7\'d1 \'e5\'e3\'e6\'c7\'d1\'e5 \'c7\'e1\'e3\'c7\'e4\u1740  \'c7\'d3\'ca \u1705 \'e5 \'c8\u1740 \'d4\'ca\'d1\u1740 \'e4 \'e3\'de\'cf\'c7\'d1 \'d1\'c7 \'e3\'d8\'c7\'c8\'de \'d4\'d1\'c7\u1740 \'d8 \'e3\'d4\'ce\'d5\u1740  \'cf\'c7\'d1\'cf
\b0 \cf0  
\f4 )
\f3  \'c7\'d3\'ca\'dd\'c7\'cf\'e5 \'e4\'e3\'c7\uc0\u1740 \'cf. \u1740 \'da\'e4\u1740  \'e5\'d1 \'e3\'e6\'de\'da \'cf\'d1 \'d5\'dd \'c7\'e6\'e1\'e6\u1740 \'ca \'cf\'c7\'d1 \'da\'e3\'e1 \'81\'c7\'81 \'d1\'c7 \'c7\'e4\'cc\'c7\'e3 \'c8\'cf\'e5\u1740 \'e3 \'a1 \'c7\'e1\'e3\'c7\'e4 \'c8\'c7 \'c8\u1740 \'d4\'ca\'d1\u1740 \'e4 \'e3\'de\'cf\'c7\'d1 \'a1 \'ce\'c7\'d1\'cc \'e3\u1740  \'90\'d1\'cf\'cf. \'e1\'c7\'d2\'e3 \'c8\'e5 \'d0\u1705 \'d1 \'c7\'d3\'ca \u1705 \'e5 \'e6\'c7\'d1\'cf \u1705 \'d1\'cf\'e4 \'c7\'d8\'e1\'c7\'da\'c7\'ca \'cf\'d1 \'e5\'d1 \'d2\'e3\'c7\'e4 \'c7\'d2 \'d8\'d1\u1740 \'de 
\f4 ''
\f3 \'c8\uc0\u1705 
\f4 '' 
\f3 \'c2\'e4
\f4  
\f3 \'d5\'e6\'d1\'ca
\f4  
\f3 \'e3\uc0\u1740 
\f4  
\f3 \'81\'d0\uc0\u1740 \'d1\'cf
\f4 .
\f3 \

\fs28 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b \cf0 Example:\
\
\pard\pardeftab720

\f1\b0\fs24 \cf7 #include <iostream>       \cf8 // std::cout\cf0 \
\cf7 #include <queue>          \cf8 // std::priority_queue\cf0 \
\cf7 #include <vector>         \cf8 // std::vector\cf0 \
\cf7 #include <functional>     \cf8 // std::greater\cf0 \
\
\pard\pardeftab720
\cf5 class\cf0  mycomparison\
\{\
  \cf5 bool\cf0  reverse;\
\cf5 public\cf0 :\
  mycomparison(\cf5 const\cf0  \cf5 bool\cf0 & revparam=\cf5 false\cf0 )\
    \{reverse=revparam;\}\
  \cf5 bool\cf0  \cf5 operator\cf0 () (\cf5 const\cf0  \cf5 int\cf0 & lhs, \cf5 const\cf0  \cf5 int\cf0 &rhs) \cf5 const\cf0 \
  \{\
    \cf5 if\cf0  (reverse) \cf5 return\cf0  (lhs>rhs);\
    \cf5 else\cf0  \cf5 return\cf0  (lhs<rhs);\
  \}\
\};\
\
\cf5 int\cf0  main ()\
\{\
  \cf5 int\cf0  myints[]= \{10,60,50,20\};\
\
  std::priority_queue<\cf5 int\cf0 > first;\
  std::priority_queue<\cf5 int\cf0 > second (myints,myints+4);\
  std::priority_queue<\cf5 int\cf0 , std::vector<\cf5 int\cf0 >, std::greater<\cf5 int\cf0 > >\
                            third (myints,myints+4);\
  \cf8 // using mycomparison:\cf0 \
  \cf5 typedef\cf0  std::priority_queue<\cf5 int\cf0 ,std::vector<\cf5 int\cf0 >,mycomparison> mypq_type;\
\
  mypq_type fourth;                       \cf8 // less-than comparison\cf0 \
  mypq_type fifth (mycomparison(\cf5 true\cf0 ));   \cf8 // greater-than comparison\cf0 \
\
  \cf5 return\cf0  0;\
\}\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\b\fs28 \cf0 Explanation of the Example:\
\
\pard\pardeftab720

\b0 \cf0 The example does not produce any output, but it constructs different {\field{\*\fldinst{HYPERLINK "http://www.cplusplus.com/priority_queue"}}{\fldrslt priority_queue}} objects:\
\
- First is empty.\
\
- Second contains the four ints defined for myints, with 60 (the highest) at its top.\
\
- Third has the same four ints, but because it uses {\field{\*\fldinst{HYPERLINK "http://www.cplusplus.com/greater"}}{\fldrslt greater}} instead of the default (which is {\field{\*\fldinst{HYPERLINK "http://www.cplusplus.com/less"}}{\fldrslt less}}), it has 10 as its top element.\
\
- Fourth and Fifth are very similar to First: they are both empty, except that these use mycomparison for comparisons, which is a special stateful comparison function that behaves differently depending on a flag set on construction.}